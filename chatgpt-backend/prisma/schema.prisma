// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  password       String
  name           String?
  role           String         @default("user") // "admin" or "user"
  sessions       Session[]
  groupMembers   GroupMember[]
  messages       Message[]
  groupMessages  GroupMessage[]
  groupsCreated  Group[]        @relation("GroupsCreated")
  createdById    Int?           // Optional: which admin created this user
  createdBy      User?          @relation("CreatedUsers", fields: [createdById], references: [id])
  createdUsers   User[]         @relation("CreatedUsers")
}

model Session {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  name      String
  messages  Message[]
  createdAt DateTime @default(now())
}

model Message {
  id        Int      @id @default(autoincrement())
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  content   String
  role      String   @default("user") // "user" or "assistant"
  createdAt DateTime @default(now())
}

model Group {
  id            Int           @id @default(autoincrement())
  name          String
  createdBy     User          @relation("GroupsCreated", fields: [createdById], references: [id])
  createdById   Int
  members       GroupMember[]
  groupSessions GroupSession[]
}

model GroupMember {
  id      Int   @id @default(autoincrement())
  group   Group @relation(fields: [groupId], references: [id])
  groupId Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  role    String
}

model GroupSession {
  id           Int           @id @default(autoincrement())
  group        Group         @relation(fields: [groupId], references: [id])
  groupId      Int
  name         String
  messages     GroupMessage[]
  createdAt    DateTime      @default(now())
}

model GroupMessage {
  id             Int           @id @default(autoincrement())
  groupSession   GroupSession  @relation(fields: [groupSessionId], references: [id])
  groupSessionId Int
  user           User?         @relation(fields: [userId], references: [id])
  userId         Int?
  content        String
  createdAt      DateTime      @default(now())
}
